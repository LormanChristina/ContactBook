(()=>{"use strict";var t={d:(e,n)=>{for(var a in n)t.o(n,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};t.d({},{Z:()=>w});const e="https://contacts-telran.herokuapp.com";class n{constructor(t,e,n,a,s,o,r){this.address=t,this.description=e,this.email=n,this.id=a,this.lastName=s,this.name=o,this.phone=r}}const a={email:"",password:""};function s(t="",e=""){return`<div>\n            <header class="d-flex justify-content-between m-auto"><h1 class="text-uppercase">Contact book</h1></header>\n            <div class="form borders br w-50 mx-auto my-3 p-3">\n                <h2 class="text-center">Log In / Registration</h2>\n                <label for="basic-url" class="form-label">Email:</label>\n                <div class="input-group">\n                    <input type="text" value="${e.email||""}" class="form-control bg br" id="email" placeholder=" Enter your email"/>\n                </div>\n                <label for="basic-url" class="form-label mt-2">Password:</label>\n                <div class="input-group">\n                    <input type="password" value="${e.password||""}" class="form-control bg br" id="password" placeholder=" Enter your password"/>\n                </div>\n                ${t}\n                <div class="buttons d-flex justify-content-around w-50 m-auto">\n                    <button id="logInBtn" class="buttons br bg ms-2">Log In</button>\n                    <button id="regBtn" class="buttons br bg me-2">Registration</button>\n                </div>\n            </div>\n        </div>`}function o(t){return`<div class="p-2 errorSection my-2 d-flex br">\n            <p class="text-start m-0">${t}</p>\n         </div>`}function r(t="",e="",n=""){return`<div>\n            <header class="d-flex justify-content-between m-auto">\n                <h1 class="text-uppercase">Contact book</h1>\n                <button id="logOut" class="buttons bg br my-auto">Log Out</button>\n            </header>\n            <div class="main_section mt-2 d-flex justify-content-between">\n                ${0==t.length?'<div class="contactsList"><h2 class="text-center">Empty contact book</h2></div>':`<div class="contactsList borders d-flex flex-column br">\n                        <button id="deleteAll" class="buttons bg br mx-auto my-2 w-50">Delete all contacts</button>\n                        ${n}\n                        ${t.map(((t,e)=>{return`<div class="cardContact br py-2 px-3" id=${a=e}>\n            <h2 class="card-title" val="card">${a+1}. ${(n=t).name}</h2>\n            <h4 class="card-subtitle text-muted" val="card">${n.phone}</h4>\n            <p class="card-text" val="card">${n.address}</p> \n        </div>`;var n,a})).join(" ")}\n                    </div>`}\n                    ${e}\n            </div>\n        </div>`}function c(t="",e=""){return`<div class="contactsForm borders br">\n            <button id="arrow-btn"></button>\n            <div class="info_section w-75 m-auto">\n                <div class="buttons d-flex justify-content-center my-2">\n                    <button id="saveBtn" class="buttons bg br mx-2">Save</button>\n                    <button id="cancelBtn" class="buttons bg br mx-2">Cancel</button>\n                </div>\n                <div>\n                    ${e}\n                    <label for="basic-url" class="form-label m-0">First name:</label>\n                    <div class="input-group">\n                        <input type="text" style="height: 30px;" class="form-control bg br" id="firstName" placeholder=" Enter First name" value=${t.name?t.name:""}>\n                    </div>\n                    <label for="basic-url" class="form-label pt-3 m-0">Last name:</label>\n                    <div class="input-group">\n                        <input type="text" style="height: 30px;" class="form-control bg br" id="lastName" placeholder=" Enter Last name" value=${t.lastName?t.lastName:""}>\n                    </div>\n                    <label for="basic-url" class="form-label pt-3 m-0">Email:</label>\n                    <div class="input-group">\n                        <input type="text" style="height: 30px;" class="form-control bg br" id="emailOfContact" placeholder=" Enter email" value=${t.email?t.email:""}>\n                    </div>\n                    <label for="basic-url" class="form-label pt-3 m-0">Phone:</label>\n                    <div class="input-group">\n                        <input type="number" style="height: 30px;" class="form-control bg br" id="phone" placeholder=" Enter telephone number" value=${t.phone?t.phone:""}>\n                    </div>\n                    <label for="basic-url" class="form-label pt-3 m-0">Address:</label>\n                    <div class="input-group">\n                        <input type="text" style="height: 30px;" class="form-control bg br" id="address" placeholder=" Enter address" value=${t.address?t.address:""}>\n                    </div>\n                    <label for="basic-url" class="form-label pt-3 m-0 br">Description:</label>\n                    <div class="form-floating py-2">\n                        <textarea class="form-control bg" placeholder="Enter description of contact" id="description">${t.description?t.description:""}</textarea>\n                    </div>\n                </div>\n            </div>\n        </div>`}function l(t){return`<div class="contactsForm">\n            <div class="info_section w-75 m-auto borders br">\n                <div class="buttons d-flex justify-content-center my-2">\n                    <button id="editBtn" class="buttons br bg mx-2">Edit</button>\n                    <button id="deleteBtn" class="buttons br bg mx-2">Delete</button>\n                </div>\n                <div class="d-flex flex-column text-md my-2 w-75 m-auto">\n                    <p class="headerColor">First name: <span style="color:aqua">${t.name}</span></p>\n                    <p class="headerColor">Last name: <span  style="color:aqua">${t.lastName}</span></p>\n                    <p class="headerColor">Email: <span style="color:aqua">${t.email}</span></p>\n                    <p class="headerColor">Phone: <span style="color:aqua">${t.phone}</span></p>\n                    <p class="headerColor">City: <span style="color:aqua">${t.address}</span></p>\n                    <div>\n                        <label for="basic-url" class="form-label headerColor">Description: </label>\n                        <p class="desc">${t.description||" - "}</p>\n                    </div>\n                </div>\n            </div>\n        </div>`}function i(){w.innerHTML='<div class="d-flex justify-content-center">\n                            <h3>\n                                <span class="let1 loader">l</span>  \n                                <span class="let2 loader">o</span>  \n                                <span class="let3 loader">a</span>  \n                                <span class="let4 loader">d</span>  \n                                <span class="let5 loader">i</span>  \n                                <span class="let6 loader">n</span>  \n                                <span class="let7 loader">g</span>  \n                            </h3>\n                        </div>'}const d=document.querySelector("#root");let u,b,m,p,h,g,f;d.innerHTML=s('<div class="regErrorForm py-2">\n            <ul class="requirementList mt-2 br py-2">\n                <li>Email must contains one @ and minimum 2 symbols after last dot</li>\n                <li>Password must contain at least one uppercase and one lowercase letters!</li>\n                <li>Password must contain at least one digit!</li>\n                <li>Password must contain at least one special symbol from [‘$’, ’~’, ’-‘, ’_’]!</li>\n            </ul>\n        </div>');let v=[];async function y(t,a){let s;i(),"POST"==t?s=new n(h,g,m,v.length>0?v.length:0,b,u,p):"PUT"==t&&(v[a]=new n(h,g,m,v[a].id,b,u,p),s=v[a]);let l=localStorage.getItem("token");try{const n=await fetch(`${e}/api/contact`,{method:t,headers:{"Content-type":"application/json; charset=UTF-8",Authorization:l},body:JSON.stringify(s)}),a=await n.json();switch(t){case"POST":switch(n.status){case 200:s.id=a.id,v.push(s),d.innerHTML=r(v,c());break;case 400:case 401:case 409:d.innerHTML=r(v,c(s,o(a.message)));break;case 500:throw new Error}break;case"PUT":switch(n.status){case 200:d.innerHTML=r(v,'<div class="d-flex justify-content-center contactsForm">\n            <button id="addContactBtn" class="buttons br bg my-2">Add New Contact</button>\n        </div>'),localStorage.removeItem("num");break;case 400:case 401:case 404:d.innerHTML=r(v,c(s,o(a.message)));break;case 500:throw new Error}}}catch(t){d.innerHTML=r(v,c(s,o("Email and phone must be unique!")))}}d.onclick=function(t){switch(t.target.id){case"regBtn":!async function(){i();try{const t=await fetch(`${e}/api/registration`,{method:"POST",headers:{"Content-type":"application/json;charset=UTF-8"},body:JSON.stringify(a)}),n=await t.json();switch(t.status){case 200:d.innerHTML=r("",'<div class="d-flex justify-content-center contactsForm">\n            <button id="addContactBtn" class="buttons br bg my-2">Add New Contact</button>\n        </div>');break;case 400:case 409:d.innerHTML=s(o(n.message),a)}localStorage.setItem("token",n.token)}catch(t){d.innerHTML=s(o("An error occured, please try again."),a)}}();break;case"logInBtn":!async function(){i();try{const t=await fetch(`${e}/api/login`,{method:"POST",headers:{"Content-type":"application/json;charset=UTF-8"},body:JSON.stringify(a)}),n=await t.json();switch(t.status){case 200:localStorage.setItem("token",n.token),await async function(){let t=localStorage.getItem("token");try{const n=await fetch(`${e}/api/contact`,{headers:{Authorization:t}}),a=await n.json();switch(n.status){case 200:v=a.contacts;break;case 401:d.innerHTML=r(a.message,'<div class="d-flex justify-content-center contactsForm">\n            <button id="addContactBtn" class="buttons br bg my-2">Add New Contact</button>\n        </div>')}}catch(t){d.innerHTML=s(o("An error occured, please try again."))}}(),d.innerHTML=r(v,'<div class="d-flex justify-content-center contactsForm">\n            <button id="addContactBtn" class="buttons br bg my-2">Add New Contact</button>\n        </div>');break;case 400:case 401:d.innerHTML=s(o(n.message),a)}}catch(t){d.innerHTML=s(o("An error occured, please try again."),a)}}();break;case"addContactBtn":d.innerHTML=r(v,c());break;case"saveBtn":localStorage.getItem("num")?y("PUT",f):r(v,y("POST"));break;case"cancelBtn":d.innerHTML=r(v,c());break;case"editBtn":d.innerHTML=r(v,c(v[f])),localStorage.setItem("num",f),function(t){u=v[t].name,b=v[t].lastName,m=v[t].email,p=v[t].phone,h=v[t].address,g=v[t].description}(f);break;case"deleteBtn":!async function(t){let n=localStorage.getItem("token");try{const a=await fetch(`${e}/api/contact/${t}`,{method:"DELETE",headers:{Authorization:n}}),s=await a.json();switch(a.status){case 200:!function(t){for(let e=0;e<v.length;e++)v[e].id==t&&(v.splice(e,1),d.innerHTML=r(v,'<div class="d-flex justify-content-center contactsForm">\n            <button id="addContactBtn" class="buttons br bg my-2">Add New Contact</button>\n        </div>'))}(t);break;case 400:case 401:case 404:d.innerHTML=r(v,c(v[f]),s.message)}}catch(t){d.innerHTML=r(v,l(v[f]),o("An error occured, please try again."))}}(v[f].id);break;case"deleteAll":!async function(){let t=localStorage.getItem("token");try{const n=await fetch(`${e}/api/clear`,{method:"DELETE",headers:{Authorization:t}}),a=await n.json();switch(n.status){case 200:v.splice(0,v.length),d.innerHTML=r(v,'<div class="d-flex justify-content-center contactsForm">\n            <button id="addContactBtn" class="buttons br bg my-2">Add New Contact</button>\n        </div>');break;case 401:d.innerHTML=r(v,'<div class="d-flex justify-content-center contactsForm">\n            <button id="addContactBtn" class="buttons br bg my-2">Add New Contact</button>\n        </div>',o(a.message))}}catch(t){d.innerHTML=r(v,'<div class="d-flex justify-content-center contactsForm">\n            <button id="addContactBtn" class="buttons br bg my-2">Add New Contact</button>\n        </div>',o("An error occured, please try again."))}}();break;case"logOut":localStorage.removeItem("token"),localStorage.removeItem("num"),d.innerHTML=s('<div class="regErrorForm py-2">\n            <ul class="requirementList mt-2 br py-2">\n                <li>Email must contains one @ and minimum 2 symbols after last dot</li>\n                <li>Password must contain at least one uppercase and one lowercase letters!</li>\n                <li>Password must contain at least one digit!</li>\n                <li>Password must contain at least one special symbol from [‘$’, ’~’, ’-‘, ’_’]!</li>\n            </ul>\n        </div>');break;case"arrow-btn":d.innerHTML=r(v,'<div class="d-flex justify-content-center contactsForm">\n            <button id="addContactBtn" class="buttons br bg my-2">Add New Contact</button>\n        </div>')}t.target.hasAttribute("val")&&(f=parseInt(t.target.parentElement.id),d.innerHTML=r(v,l(v[f])))},d.onchange=function(t){switch(t.target.id){case"email":a.email=t.target.value;break;case"password":a.password=t.target.value;break;case"firstName":u=t.target.value;break;case"lastName":b=t.target.value;break;case"emailOfContact":m=t.target.value;break;case"phone":p=t.target.value;break;case"address":h=t.target.value;break;case"description":g=t.target.value}};const w=d})();